[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry]
name = "usdb_syncer"
version = "0.0.0"  # will be replaced by current git tag via poetry-dynamic-versioning
authors = ["Markus BÃ¶hning <markus.boehning@gmail.com>"]
description = "A download manager for USDB songs."
readme = ["README.md"]
repository = "https://github.com/bohning/usdb_syncer"
include = [
    { path = "src/usdb_syncer/gui/forms/*.py", format = ["sdist", "wheel"] },
    { path = "src/usdb_syncer/gui/resources/qt/*.py", format = ["sdist", "wheel"] },
    { path = "src/usdb_syncer/data/*.json", format = ["sdist", "wheel"] },
]

[tool.poetry.requires-plugins]
poetry-dynamic-versioning = { version = ">=1.0.0,<2.0.0", extras = ["plugin"] }

[tool.poetry.dependencies]
python = ">3.10,<3.13"
appdirs = "*"
attrs = "*"
beautifulsoup4 = "*"
demucs = "*"
ffmpeg-normalize = ">=1.27"
filetype = "*"
keyring = "*"
lxml = "*"
mutagen = "*"
numpy = "^2.2.5"
packaging = "*"
pillow = ">=10"
PySide6 = "*"
reportlab = "*"
requests = "*"
rookiepy = "^0.5.3"
send2trash = "*"
sounddevice = "^0.5.1"
soundfile = "^0.13.1"
unidecode = "*"
yt-dlp = {version = "*", extras = ["default", "curl_cffi"]}

[tool.poetry.group.dev.dependencies]
tox = "*"
# lint
ruff = "0.11.6"
mypy = "*"
types-requests = "*"
# test
pytest = "*"
# benchmark
snakeviz = "*"
# tools
defusedxml = "^0.7.1"

[tool.poetry.group.build.dependencies]
PySide6 = "*"  # for file generation
dunamai = "*"

[tool.poetry.group.bundle.dependencies]
pyinstaller = "*"
pyinstaller-hooks-contrib = "*"
# specifically required for pyinstaller (Note: darwin -> macos)
altgraph = "*"
macholib = {version = "*", markers="sys_platform == 'darwin'"}
pywin32-ctypes = {version = "*", markers="sys_platform == 'win32'"}

[tool.poetry.scripts]
usdb_syncer = "usdb_syncer.gui:main"

[tool.poetry-dynamic-versioning]
enable = true
substitution.files = []

[tool.ruff]
extend-exclude = [
    "forms",
    "qt",
]
target-version = "py312"
preview = true

[tool.ruff.format]
skip-magic-trailing-comma = true

[tool.ruff.lint]
select = [
    "A",
    "B",
    "BLE",
    "C4",
    "C90",
    "COM",
    "E",
    "F",
    "I",
    "LOG",
    "N",
    "PTH",
    "Q",
    "RUF",
    "S",
    "TRY",
    "W",
]
ignore = [
    # Since we're using the ruff formatter, we follow ruff's official guide on what
    # rules to skip: https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "W191",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "COM812",
    "COM819",
    # We're fine with `assert`s if they're not used for validation, but state facts
    "S101",
    # Allow `subprocess` and starting without shell.
    "S404",
    "S603",
    "S606",
    # Maybe investigate in the future, if it is possible to do this more safely.
    "S607",
    # This flags _all_ dynamic SQL constructions, so it's pointless.
    "S608",
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.isort]
# For consistency with the formatter, see https://docs.astral.sh/ruff/settings/#lint_isort_split-on-trailing-comma 
split-on-trailing-comma = false

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true
follow_imports = "silent"
exclude = ["src/usdb_syncer/gui/forms", "src/usdb_syncer/gui/resources"]

[tool.pyright]
# generates a lot of false positives for mutagen
reportPrivateImportUsage = false
exclude = [
    "src/usdb_syncer/gui/forms",
    "src/usdb_syncer/gui/resources",
    "venv",
    ".tox",
]
