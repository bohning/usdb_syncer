[project]
name = "usdb_syncer"
version = "0.0.0"
description = "A download manager for USDB songs."
authors = [{ name = "Markus BÃ¶hning", email = "markus.boehning@gmail.com" }]
requires-python = ">3.10,<3.13"
readme = "README.md"
dependencies = [
    "attrs",
    "beautifulsoup4",
    "ffmpeg-normalize>=1.27",
    "filetype",
    "flask>=3.1.1,<4",
    "keyring",
    "lxml",
    "mutagen",
    "numpy>=2.2.5,<3",
    "packaging",
    "pillow>=10",
    "platformdirs",
    "PySide6",
    "qrcode[pil]~=8.2",
    "reportlab",
    "requests",
    "rookiepy>=0.5.3,<0.6",
    "send2trash",
    "sounddevice>=0.5.1,<0.6",
    "soundfile>=0.13.1,<0.14",
    "unidecode",
    "yt-dlp[default, curl_cffi]",
]

[project.urls]
Repository = "https://github.com/bohning/usdb_syncer"

[project.scripts]
usdb_syncer = "usdb_syncer.gui:main"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[dependency-groups]
dev = [
    "tox",
    "ruff==0.11.6",
    "mypy",
    "types-requests",
    "pytest",
    "snakeviz",
    "defusedxml>=0.7.1,<0.8",
]
build = [
    "PySide6",
    "dunamai",
]
bundle = [
    "pyinstaller",
    "pyinstaller-hooks-contrib",
    "altgraph",
    "macholib ; sys_platform == 'darwin'",
    "pywin32-ctypes ; sys_platform == 'win32'",
]

[tool.uv]
default-groups = [
    "dev",
    "build",
    "bundle",
]

[tool.hatch.build.targets.sdist]
include = [
    "src/usdb_syncer/gui/forms/*.py",
    "src/usdb_syncer/gui/resources/qt/*.py",
    "src/usdb_syncer/data/*.json",
    "src/usdb_syncer/webserver/static/*",
    "src/usdb_syncer/webserver/templates/*",
]

[tool.hatch.build.targets.wheel]
include = [
    "src/usdb_syncer/gui/forms/*.py",
    "src/usdb_syncer/gui/resources/qt/*.py",
    "src/usdb_syncer/data/*.json",
    "src/usdb_syncer/webserver/static/*",
    "src/usdb_syncer/webserver/templates/*",
]

[tool.poetry-dynamic-versioning]
enable = true
substitution.files = []

[tool.ruff]
extend-exclude = [
    "forms",
    "qt",
]
target-version = "py312"
preview = true

[tool.ruff.format]
skip-magic-trailing-comma = true

[tool.ruff.lint]
select = [
    "A",
    "B",
    "BLE",
    "C4",
    "C90",
    "COM",
    "E",
    "F",
    "I",
    "LOG",
    "N",
    "PTH",
    "Q",
    "RUF",
    "S",
    "TRY",
    "W",
]
ignore = [
    # Since we're using the ruff formatter, we follow ruff's official guide on what
    # rules to skip: https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "W191",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "COM812",
    "COM819",
    # We're fine with `assert`s if they're not used for validation, but state facts
    "S101",
    # Allow `subprocess` and starting without shell.
    "S404",
    "S603",
    "S606",
    # Maybe investigate in the future, if it is possible to do this more safely.
    "S607",
    # This flags _all_ dynamic SQL constructions, so it's pointless.
    "S608",
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.isort]
# For consistency with the formatter, see https://docs.astral.sh/ruff/settings/#lint_isort_split-on-trailing-comma 
split-on-trailing-comma = false

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true
follow_imports = "silent"
exclude = ["src/usdb_syncer/gui/forms", "src/usdb_syncer/gui/resources"]

[tool.pyright]
# generates a lot of false positives for mutagen
reportPrivateImportUsage = false
exclude = [
    "src/usdb_syncer/gui/forms",
    "src/usdb_syncer/gui/resources",
    "venv",
    ".tox",
]
